# Copyright 2020 The ANGLE Project Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Contains the build rules for confidential trace tests.

import("../../../gni/angle.gni")

angle_shared_library("angle_restricted_trace_loader") {
  sources = [
    "restricted_traces_export.h",
    "trace_egl_loader_autogen.cpp",
    "trace_egl_loader_autogen.h",
    "trace_gles_loader_autogen.cpp",
    "trace_gles_loader_autogen.h",
  ]
  defines = [ "ANGLE_TRACE_LOADER_IMPLEMENTATION" ]
  deps = [ "$angle_root:includes" ]
}

angle_trace_fixture("angle_restricted_trace_fixture") {
  gl_header = "angle_trace_gl.h"
  public_deps = [
    ":angle_restricted_trace_loader",
    "$angle_root/util:angle_util",
  ]
  public_configs = [ "$angle_root:no_gl_prototypes" ]
}

_trace_json = read_file("restricted_traces.json", "json")
_trace_targets = []

foreach(_trace_and_version, _trace_json.traces) {
  _trace_and_version_arr = []
  _trace_and_version_arr = string_split(_trace_and_version)
  _trace = _trace_and_version_arr[0]
  _trace_json_path = "$_trace/$_trace.json"
  _trace_data = []
  _trace_data = read_file(_trace_json_path, "json")
  _target = "angle_restricted_trace_$_trace"

  angle_trace(_target) {
    sources = rebase_path(_trace_data.TraceFiles, ".", _trace)

    data = [
      "$_trace/$_trace.json",
      "$_trace/$_trace.angledata.gz",
    ]
    fixture = ":angle_restricted_trace_fixture"
  }

  _trace_targets += [ ":$_target" ]
}

angle_shared_library("angle_restricted_traces") {
  testonly = true

  sources = [ "restricted_traces_export.h" ]

  data = [ "restricted_traces.json" ]

  data_deps = _trace_targets
  defines = [ "ANGLE_TRACE_IMPLEMENTATION" ]

  deps = [
    "$angle_root:angle_common",
    "$angle_root/util:angle_util",
  ]

  public_deps = [ ":angle_restricted_trace_loader" ]
}

group("goldctl") {
  data = []

  # Because this links to a CIPD dependency, which is a symlink on Unix
  # platforms, refer to the actual executable rather than the whole directory;
  # copying the whole directory doesn't work, at least with "mb.py zip".
  if (is_win) {
    data += [ "//tools/skia_goldctl/win/goldctl.exe" ]
  } else if (is_mac) {
    data += [ "//tools/skia_goldctl/mac/goldctl" ]
  } else {
    data += [ "//tools/skia_goldctl/linux/goldctl" ]
  }
}

group("angle_restricted_trace_gold_tests") {
  testonly = true
  data_deps = [
    ":goldctl",
    "$angle_root/src/tests:angle_perftests",
    "$angle_root/src/tests:angle_system_info_test",
  ]
  data = [
    "restricted_trace_gold_tests.py",
    "restricted_traces.json",
    "../skia_gold/",
    "//build/skia_gold_common/",
    "//testing/scripts/common.py",
    "//testing/xvfb.py",
  ]
}
